// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USUARIO
  ESTOQUE
  FRENTE_CAIXA
  MODERADOR
  ADMIN
}
model User {
  id          String   @id @default(uuid())
  name        String
  email       String   @unique
  password    String
  createdAt   DateTime @default(now())
  role        UserRole 

  @@map("users")

  sales     Sale[] 
  productMovements   ProductMovement[] 
}

enum PaymentMethod {
  DINHEIRO
  DEBITO
  CREDITO
  PIX
}
enum Status {
  CANCELADO
  PENDENTE 
  COMPLETADO 
  REEMBOLSADO
}
model Sale {
  id            String          @id @default(uuid())
  paymentMethod PaymentMethod    
  status        Status          
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt

  userId        String          
  saleItems     SaleItem[]

  user          User            @relation(fields: [userId], references: [id])

  @@map("sales")
}
model SaleItem {
  id        String             @id @default(uuid())
  quantity  Int      
  price     Float   

  saleId    String     
  productId String     

  sale      Sale     @relation(fields: [saleId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])

  @@map("sale_items")
}

enum MeasurementUnit {
  UNIDADE         
  KILOGRAMA      
  LITRO          
  METRO         
  GRAMA          
  CENTIMETRO     
  MILILITRO      
  PECA          
}
model Product {
  id                String             @id @default(uuid())
  name              String
  price             Float
  stock             Int
  minimumStock      Int               
  measurementUnit   MeasurementUnit    
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt

  categoryId        String

  saleItems         SaleItem[]
  productMovements  ProductMovement[]

  category          Category           @relation(fields: [categoryId], references: [id])

  @@map("products")
}

model Category {
  id          String             @id @default(uuid())
  name        String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
    
  products     Product[]

  @@map("categories")
}

enum MovementType {
  ENTRADA  
  SAIDA    
}
model ProductMovement {
  id          String             @id @default(uuid())
  productId     String                                       

  movementType  MovementType                             
  quantity      Int                                       
  responsible   String                                   
  createdAt     DateTime  @default(now())              

  userId        String   
                                      
  product       Product   @relation(fields: [productId], references: [id])  
  user          User      @relation(fields: [userId], references: [id])  

  changeDetails String      

  @@map("product_movements")
}


